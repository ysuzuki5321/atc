D - Pairs
  https://atcoder.jp/contests/abc155/tasks/abc155_d
  n個の整数のうち、二つを選んでペアにしてそれぞれの積を求めたときにk番目に来る数は何か？
    正の整数と負の整数を掛けると-になるため、0を掛けたものよりも小さくなる
      4 3
        3 3 -4 -2
        の時
          -4,-2,3,3となる
            -12,-12,-6,-6,8,9となる
              確かに積の並びで考えると小さい順番から並べる等は出来そうであるが
                サイズが大きすぎる
              どこにいるかは確かに分かる
                ここからさらにどこにいるかを探すのが難しい
          -4,-3,2,3
            -12,-9,-8,-6
              これは手に負えない
                
              
              

E - Payment
  https://atcoder.jp/contests/abc155/tasks/abc155_e
    通貨は10^100+1種類
    1,10,10^2,...(10^(10^100))
      価値Nのたこ焼き器を一つ買う
        支払うときの枚数とおつりの枚数の合計を最小にする
          ある桁iを0にして上の桁iを1にするか、ある桁iを指定枚数出すかという問題
          シンプルにdpを使用できそうである
            下の桁から考える必要がありそう
              例えば99の時
                10一枚を出すと1桁目は1を返す
                  2桁目に対して100一枚を出すと10を1枚返す10を9枚出すと0枚返す
                    繰り上がりの管理をすれば良いわけであるが
                      まず確実にある桁iに対してxi枚を出すところから考える
                        繰り上がってきている場合、+1をする
                          1は1枚
                          2は2枚
                          5は5枚
                          6は10を出して5枚とできる
                          7は10を出して4枚とできる
                        ある桁が6枚以上であれば繰り上げてしまった方が楽になる
                        下から繰り上がってきている場合は？
                        19であれば20
                        29であれば30
                        59であれば60で6+1,100にすると1+5=6
                        69であれば100にすると31のおつりになるため1+4
                          70にすると7+1=8
                        55であれば55で5+5=10,60で6+5=11,100にすると45なので1+9=10
                        69であれば100にすると31のおつりになるため1+4
                          70にすると7+1=8
                1を9枚出すと1桁目は0を返す
                    試しに実装してみよう
                      5の時繰り上がらないと55で55を出して10
                        うーむ、dpか？
                          dp[i][k]としてk=xi
                        555で14になるが最初の5で繰り上がらないため555で15になる
                          ある桁からある桁まで繰り上がるか全部繰り上がらないかを考えたときに
                            1桁目は恩恵がないがそれ以降の桁を見ると-1ずつされていくのは確か
                              やはりdpでやるということである
                上の桁から0枚、xi枚、xi+1枚で決めていけそうだ
                  あるxi>0を0枚にする時は上の桁は+1か0になっている
                  あるxiをxiにする時はそのまま
                  あるxi+1<10にする時はxi+1を入れるこれで漸化式を作れそうだ
                    下からの繰り上がりを考えた場合に、何枚リターンされるかをkにおいて置いた方が良いのではないかという気がしてきた
                      dpの漸化式を表現する力がまだ弱い、これを強化する
                                              

F - Perils in Parallel
  https://atcoder.jp/contests/abc155/tasks/abc155_f
  座標ai,電源bi=1の時on,bi=0の時off
    m本のコードがあり、1からmの番号が付いている
      範囲が決まっていて全てのを0に出来るか
        範囲が被っている場合があるだろう
          同じところからスタートしている場合もあるだろう
            左から決めていけるのは間違いない
              あるmiを切り替えると次に1になっているmkが見つかる
                0 1 と並んでいて
                l = 1 r =1
                とl=1r=2があるときに
                両方切る必要がある
                  つまり左から単純に決めていけない
                    
                  
