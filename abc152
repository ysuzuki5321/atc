数学問題はぐぐる
  →
  

D - Handstand 2
  →n以下の整数のうち先頭と末尾が等しくなる数字の組み合わせの数
    →dp[10][10]で済むはず
      →0は使用されないので1~9の範囲でとれるだけ取る

E - Flatten
  →n個の整数
    →1<=i<j<=nを満たすどのようなi,jについてもAiBi=AjBjが成り立つ
      →このようなB1,...,BnにおけるB1+...+Bnの最小値を求めよ
        →AiBi=AjBjが成り立つためには最小公倍数が必要となる
          →最小公倍数をmodで求め、各数字に対して
        →素因数分解をした方が楽な気もする

F - Tree and Constraints
  →N頂点の木
    →各辺にそれぞれ白か黒を塗る
      →塗り方は2^N-1通り
        →m個の制約を全て満たすものの数をもとめる
          →i(1<=i<=m)番目の制約は2つの整数ui,viによってあらわされる
            →これはuiとviを結ぶパスに含まれる辺のうち黒く塗られているものが一つ以上存在しなければならない
              →重複している場所を考える必要がある
    →2<=N<=50
    →1<=M<=min(20,n(n-1)/2)
      →制約は20
      →辺の数は49
        →bitで処理可能な量ではない
          →制約に含まれない部分は事前に計算する
          →制約に含まれる部分は20c1,20c2,20c3,20c4,...20c20となるため全パターンからこれらを白く塗る組み合わせについて引くという全探索は出来ない
      →1つ１つ見ていく方法
        →ある頂点においてそこの制約がokな場合とまだokではない場合で考える
          →okである場合、そこまでに含まれていた制約は全てなくなるわけだ
          →okでない場合、制約は積まれていく
            →制約数は一意か
              →ある地点での成約数は一意になりそうである
                →制約数0にして次に送るか
                →制約数そのままで次に送るか
                →そこが制約の終点であるならそのまま次には送れないため0にして送る
                  →制約が枝分かれしている先で始まって別の先で終わっているパターンを考慮出来ていなかったためだめ
              
              
