パターン検索 https://onlinejudge.u-aizu.ac.jp/courses/lesson/1/ALDS1/14/ALDS1_14_C
  →h*wの文字フィールドからr*cの文字パターンを探して全て出力する
    →1<=h,w<=1000
    →1<=r,c<=1000
  →r,cが小さいと検査の係数が小さくなり、h,wの捜査が大きくなる
  →r,cが大きいと検査の係数が大きくなり、h,wの捜査が小さくなる
    →h=1000w=1000かつr=500c=500くらいが一番重くなる
      →全て出力できる場合は確実にTLE
      →全探索では不可能
        →接尾辞配列？
          →シンプルに難しい
        →使われるのは英大文字、英小文字、数字
          →これをいじる？
            →自力index比較では無理だが普通の組み込みsubstringと==を使っていけた

文字列検索　https://onlinejudge.u-aizu.ac.jp/courses/lesson/1/ALDS1/14/ALDS1_14_D
  →文字列Tの中に文字列Pが出現するかどうか判定
    →これは接尾辞配列
      →suffixarrayをO(n)で構築して検索する
        →suffixarrayのサイズがでかくなりすぎてMLE
          →ライブラリ作る必要があるレベルなので後回し

お釣りの最小個数　https://onlinejudge.u-aizu.ac.jp/courses/lesson/1/ALDS1/15/ALDS1_15_A 
  →1,5,10,25を使ってnを作る
    →やるだけ
    
有理ナップサック問題　https://onlinejudge.u-aizu.ac.jp/courses/lesson/1/ALDS1/15/ALDS1_15_B
  →重さがwまでの範囲で自由である
    →その時の価値はvi*w'/wiとなる
  →1<=N<=10^5
  →1<=w<=10^9
  →1<=vi<=10^9
  →1<=wi<=10^9
    →これは単位当たりの価値が一番大きいものを詰められるだけ詰めていけば良さそう
      
活動選択問題　https://onlinejudge.u-aizu.ac.jp/courses/lesson/1/ALDS1/15/ALDS1_15_C
  →多くの活動に参加したい
  →活動の一つはsiに始まりtiに終わる
    →スケジューリング問題
      →終わる時間が速いものから拾う
        
ハフマン符号　https://onlinejudge.u-aizu.ac.jp/courses/lesson/1/ALDS1/15/ALDS1_15_D
  →英小文字の文字列からハフマン木を作ってビット文字列の長さを出力する
    →どれが何個あるかを計算するだけではある

組み合わせ最適化プラクティス
  コイン問題
    →m種類のコインを使ってn円支払う時のコインの最小枚数を求めよ
      →1<=n<=50000
      →1<=m<=20
      →1<=c1<=10000
        →貪欲
   
  ナップサック
    →何度でも同じものを選べるタイプ
      →1<=n<=100
      →1<=vi<=1000
      →1<=wi<=1000
      →1<=W<=10000
    →一次元で良さそう？
      →よい
  
  最長増加部分列
    →最長増加部分列をやるだけ
      
      
      
  
  
